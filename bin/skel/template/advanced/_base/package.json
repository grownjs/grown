{
  "name": "{{paramCase APP_NAME}}{{=<% %>=}}",
  "version": "0.0.0",
  "private": true,
  "scripts": {
    "start": "grown up",
    "debug": "grown repl -i `date +'%Y-%m-%d_%H%M'`",
    "watch": "<% RUN %> dev -- -P localhost:8080 -r bin/server",<% #HAS_TESTS %>
    "cover": "nyc --reporter=lcov --temp-directory tmp/.nyc <% RUN %> test",
    "cover:up": "codecov --file=coverage/lcov.info --disable=gcov -e TRAVIS_NODE_VERSION",<% #IS_JASMINE %>
    "dev:test": "jasmine-node test --watchFolders app lib",
    "test": "jasmine-node test",<% /IS_JASMINE %><% #IS_MOCHA %>
    "dev:test": "_mocha test -R spec --recursive --watch",
    "test": "_mocha test -R spec --recursive",<% /IS_MOCHA %><% #IS_AVA %>
    "dev:test": "ava test --watch",
    "test": "ava test",<% /IS_AVA %><% /HAS_TESTS %>
    "lint": "eslint config cron bin lib<% #HAS_TESTS %> test<% /HAS_TESTS %>",
    "prod": "yarn start -- -e production",
    "dist": "tarima -Ofqe production",
    "dev": "tarima -ed"
  },<%={{ }}=%>
  "tarima": {
    "cwd": ".",
    "src": [
      "lib/{{paramCase APP_NAME}}_web/views",
      "lib/{{paramCase APP_NAME}}_web/assets"
    ],
    "watch": [
      "lib/{{paramCase APP_NAME}}/application.js",
      "lib/{{paramCase APP_NAME}}/models",
      "lib/{{paramCase APP_NAME}}/services",
      "lib/{{paramCase APP_NAME}}/templates",
      "lib/{{paramCase APP_NAME}}_web/controllers",
      "lib/{{paramCase APP_NAME}}_web/middlewares",
      "lib/{{paramCase APP_NAME}}_web/middlewares.js",
      "lib/{{paramCase APP_NAME}}_web/policies.js",
      "lib/{{paramCase APP_NAME}}_web/routes.js",
      "config",
      ".env",
      "package.json"
    ]{{=<% %>=}},
    "filter": [
      "!_*",
      "!**/_*",
      "!**/_*/**"
    ]<% #BUNDLER %>,
    "bundle": [
      "**/{views,javascripts}/**"
    ]<% /BUNDLER %>,
    "rename": [
      "**/views/**:{fullpath/2}",
      "**/assets/**:public/{fullpath/3}"
    ],
    "ignore": [
      ".gitkeep"
    ],
    "ignoreFiles": [
      ".gitignore"
    ]<% #RELOADER %>,
    "devPlugins": [<% #IS_BROWSER_SYNC %>
      "tarima-browser-sync"<% /IS_BROWSER_SYNC %><% ^IS_BROWSER_SYNC %>
      "tarima-lr"<% /IS_BROWSER_SYNC %>
    ]<% /RELOADER %><% #HAS_PLUGINS %>,
    "plugins": [<% #HAS_TALAVERA %>
      "talavera"<% #HAS_BOWER %>,<% /HAS_BOWER %><% /HAS_TALAVERA %><% #HAS_BOWER %>
      "tarima-bower"<% /HAS_BOWER %>
    ],
    "pluginOptions": {<% #HAS_TALAVERA %>
      "talavera": {
        "dest": "public/images"
      }<% /HAS_TALAVERA %><% #HAS_BOWER %><% #HAS_TALAVERA %>,<% /HAS_TALAVERA %>
      "tarima-bower": {
        "bundle": true
      }<% /HAS_BOWER %><% #RELOADER %><% #IS_BROWSER_SYNC %><% #HAS_TALAVERA %>,<% /HAS_TALAVERA %>
      "tarima-browser-sync": {
        "timeout": 1000
      }<% /IS_BROWSER_SYNC %><% ^IS_BROWSER_SYNC %><% #HAS_TALAVERA %>,<% /HAS_TALAVERA %>
      "tarima-lr": {
        "timeout": 1000
      }<% /IS_BROWSER_SYNC %><% /RELOADER %>
    }<% /HAS_PLUGINS %><% #CAN_BUNDLE %>,
    "bundleOptions": {
      <% #ES6 %><% ^IS_BUBLE %>"transpiler": "<% ES6 %>",
      <% /IS_BUBLE %><% /ES6 %><% #BUNDLER %><% ^IS_ROLLUP %>"bundler": "<% BUNDLER %>",
      <% /IS_ROLLUP %><% #IS_ROLLUP %>"bundleCache": true,
      "entryCache": true,
      "rollup": {
        "plugins": [
          "rollup-plugin-node-resolve",
          "rollup-plugin-commonjs"
        ],
        "rollup-plugin-node-resolve": {
          "module": true,
          "jsnext": true,
          "main": true,
          "browser": true
        }
      },
      <% /IS_ROLLUP %><% /BUNDLER %>"extensions": {
        <% #ES6 %>"js": "es6",
        <% /ES6 %>"css": "<% #IS_POSTCSS %>post<% /IS_POSTCSS %><% ^IS_POSTCSS %><% CSS_LANG %><% /IS_POSTCSS %>"
      }<% #IS_BUBLE %>,
      "buble": {
        "jsx": "h"
      }<% /IS_BUBLE %><% #IS_BABEL %>,
      "babel": {
        "presets": [
          [
            "es2015",
            {}
          ]
        ],
        "plugins": [
          [
            "transform-react-jsx",
            {
              "pragma": "h"
            }
          ]
        ]
      }<% /IS_BABEL %><% #IS_LESS %>,
      "less": {
        "plugins": [
          "less-plugin-autoprefix"
        ]
      }<% /IS_LESS %><% #IS_POSTCSS %>,
      "postcss": {
        "plugins": [
          "postcss-import",
          "postcss-cssnext"
        ]
      }<% /IS_POSTCSS %>
    }<% /CAN_BUNDLE %>
  }
}
