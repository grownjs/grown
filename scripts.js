
[].slice.call(document.querySelectorAll('pre code.lang-js')).forEach(function (source) {
  var matches = source.innerText.match(/\/\*+\s*@runkit\s*(.+?)\s*\*+\//);
  if (!matches) { return; }
  var snippet = __runkit__[matches[1]] || __runkit__;
  var isEndpoint = snippet.endpoint;
  var sourceCode = source.innerText.replace(((matches[0]) + "\n"), '');
  var a = document.createElement('a');
  a.innerText = 'â–¾ REPL';
  a.href = location.href;
  a.onclick = function (e) {
    if (a._locked) { return; }
    a._locked = true;
    delete a.onclick;
    e.preventDefault();
    a.innerText = 'Loading...';
    var target = document.createElement('div');
    RunKit.createNotebook({
      element: target,
      source: sourceCode,
      mode: isEndpoint && 'endpoint',
      title: snippet.title,
      preamble: snippet.preamble,
      onLoad: function onLoad() {
        target.style = 'display:block;overflow:hidden';
        source.parentNode.parentNode.removeChild(source.parentNode);
      },
    });
    target.style = 'display:none';
    source.parentNode.parentNode.insertBefore(target, source.parentNode);
  };
  source.parentNode.appendChild(a);
});

var activeLocation = location.pathname.replace(/\/$/, '') || '/';
var linkSelector = "#sidebar a[href$=\"" + activeLocation + "\"]";
var activeLink = document.querySelector(linkSelector);

if (activeLink && activeLocation !== '/') {
  activeLink.scrollIntoView({
    block: 'end',
  });
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXRlL1dvcmtzcGFjZS9ncm93bi93ZWJzaXRlL3NyYy9zY3JpcHRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbCBSdW5LaXQsIF9fcnVua2l0X18gKi9cbltdLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgncHJlIGNvZGUubGFuZy1qcycpKS5mb3JFYWNoKHNvdXJjZSA9PiB7XG4gIGNvbnN0IG1hdGNoZXMgPSBzb3VyY2UuaW5uZXJUZXh0Lm1hdGNoKC9cXC9cXCorXFxzKkBydW5raXRcXHMqKC4rPylcXHMqXFwqK1xcLy8pO1xuICBpZiAoIW1hdGNoZXMpIHJldHVybjtcbiAgY29uc3Qgc25pcHBldCA9IF9fcnVua2l0X19bbWF0Y2hlc1sxXV0gfHwgX19ydW5raXRfXztcbiAgY29uc3QgaXNFbmRwb2ludCA9IHNuaXBwZXQuZW5kcG9pbnQ7XG4gIGNvbnN0IHNvdXJjZUNvZGUgPSBzb3VyY2UuaW5uZXJUZXh0LnJlcGxhY2UoYCR7bWF0Y2hlc1swXX1cXG5gLCAnJyk7XG4gIGNvbnN0IGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gIGEuaW5uZXJUZXh0ID0gJ+KWviBSRVBMJztcbiAgYS5ocmVmID0gbG9jYXRpb24uaHJlZjtcbiAgYS5vbmNsaWNrID0gZSA9PiB7XG4gICAgaWYgKGEuX2xvY2tlZCkgcmV0dXJuO1xuICAgIGEuX2xvY2tlZCA9IHRydWU7XG4gICAgZGVsZXRlIGEub25jbGljaztcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgYS5pbm5lclRleHQgPSAnTG9hZGluZy4uLic7XG4gICAgY29uc3QgdGFyZ2V0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgUnVuS2l0LmNyZWF0ZU5vdGVib29rKHtcbiAgICAgIGVsZW1lbnQ6IHRhcmdldCxcbiAgICAgIHNvdXJjZTogc291cmNlQ29kZSxcbiAgICAgIG1vZGU6IGlzRW5kcG9pbnQgJiYgJ2VuZHBvaW50JyxcbiAgICAgIHRpdGxlOiBzbmlwcGV0LnRpdGxlLFxuICAgICAgcHJlYW1ibGU6IHNuaXBwZXQucHJlYW1ibGUsXG4gICAgICBvbkxvYWQoKSB7XG4gICAgICAgIHRhcmdldC5zdHlsZSA9ICdkaXNwbGF5OmJsb2NrO292ZXJmbG93OmhpZGRlbic7XG4gICAgICAgIHNvdXJjZS5wYXJlbnROb2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc291cmNlLnBhcmVudE5vZGUpO1xuICAgICAgfSxcbiAgICB9KTtcbiAgICB0YXJnZXQuc3R5bGUgPSAnZGlzcGxheTpub25lJztcbiAgICBzb3VyY2UucGFyZW50Tm9kZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0YXJnZXQsIHNvdXJjZS5wYXJlbnROb2RlKTtcbiAgfTtcbiAgc291cmNlLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQoYSk7XG59KTtcblxuY29uc3QgYWN0aXZlTG9jYXRpb24gPSBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC8kLywgJycpIHx8ICcvJztcbmNvbnN0IGxpbmtTZWxlY3RvciA9IGAjc2lkZWJhciBhW2hyZWYkPVwiJHthY3RpdmVMb2NhdGlvbn1cIl1gO1xuY29uc3QgYWN0aXZlTGluayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobGlua1NlbGVjdG9yKTtcblxuaWYgKGFjdGl2ZUxpbmsgJiYgYWN0aXZlTG9jYXRpb24gIT09ICcvJykge1xuICBhY3RpdmVMaW5rLnNjcm9sbEludG9WaWV3KHtcbiAgICBibG9jazogJ2VuZCcsXG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbImNvbnN0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsT0FBTyxXQUFDLE9BQU0sQ0FBQyxBQUFHO0VBQzdFQSxHQUFLLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxTQUFTLENB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